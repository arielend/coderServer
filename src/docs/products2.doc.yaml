# components:
#   schemas:
#     Product:
#       type: object
#       properties:
#         title:
#           type: string
#           description: "Title of the product"
#         category:
#           type: string
#           description: "Category to which the product belongs"
#         photo:
#           type: string
#           description: "URL of the product's photo"
#         description:
#           type: string
#           description: "Description of the product"
#         supplier_id:
#           type: string
#           format: ObjectId
#           description: "ID of the supplier who provides the product"
#         rating:
#           type: integer
#           enum: [1, 2, 3, 4, 5]
#           description: "Product rating, from 1 to 5"
#         price:
#           type: number
#           description: "Price of the product"
#         stock:
#           type: integer
#           description: "Number of items available in stock"
#         createdAt:
#           type: string
#           format: date-time
#           description: "Timestamp of when the product was created"
#         updatedAt:
#           type: string
#           format: date-time
#           description: "Timestamp of when the product was last updated"
#       required:
#         - title
#         - category
#         - supplier_id
#       example:
#         title: "Example Product"
#         category: "Electronics"
#         photo: "https://example.com/photo.jpg"
#         description: "This is an example product description."
#         supplier_id: "60d0fe4f5311236168a109ca"
#         rating: 5
#         price: 99.99
#         stock: 10
#         createdAt: "2024-09-03T10:00:00Z"
#         updatedAt: "2024-09-03T10:00:00Z"
#   responses:
#     ProductResponse:
#       type: object
#       properties:
#         statusCode:
#           type: integer
#           description: "HTTP status code"
#         message:
#           type: string
#           description: "Response message"
#         product:
#           $ref: '#/components/schemas/Product'
#       example:
#         statusCode: 201
#         message: "Product created"
#         product:
#           title: "Example Product"
#           category: "Electronics"
#           photo: "https://example.com/photo.jpg"
#           description: "This is an example product description."
#           supplier_id: "60d0fe4f5311236168a109ca"
#           rating: 5
#           price: 99.99
#           stock: 10
#           createdAt: "2024-09-03T10:00:00Z"
#           updatedAt: "2024-09-03T10:00:00Z"
#   securitySchemes:
#     cookieAuth:
#       type: apiKey
#       in: cookie
#       name: token
# paths:
#   /api/products/{id}:
#     get:
#       summary: "Get a product by ID"
#       tags:
#         - Product
#       parameters:
#         - name: id
#           in: path
#           required: true
#           description: "ID of the product to retrieve"
#           schema:
#             type: string
#       responses:
#         200:
#           description: "Product retrieved successfully"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Product'
#         404:
#           description: "Product not found"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/Message1'
#         500:
#           description: "Internal Server Error"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/Message1'
#     delete:
#       summary: "Delete a product by ID"
#       tags:
#         - Product
#       parameters:
#         - name: id
#           in: path
#           required: true
#           description: "ID of the product to delete"
#           schema:
#             type: string
#       security:
#         - cookieAuth: []
#       responses:
#         200:
#           description: "Product deleted successfully"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/Message1'
#         404:
#           description: "Product not found"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/Message1'
#         500:
#           description: "Internal Server Error"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/Message1'
#     put:
#       summary: "Update a product by ID"
#       tags:
#         - Product
#       parameters:
#         - name: id
#           in: path
#           required: true
#           description: "ID of the product to update"
#           schema:
#             type: string
#       requestBody:
#         required: true
#         description: "Updated product data"
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/Product'
#       security:
#         - cookieAuth: []
#       responses:
#         200:
#           description: "Product updated successfully"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/Message1'
#         404:
#           description: "Product not found"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/Message1'
#         500:
#           description: "Internal Server Error"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/Message1'
#   /api/products:
#     post:
#       summary: "Create a new product"
#       tags:
#         - Product
#       requestBody:
#         required: true
#         description: "Product data to create a new product"
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/Product'
#       security:
#         - cookieAuth: []
#       responses:
#         201:
#           description: "Product created successfully"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/ProductResponse'
#         500:
#           description: "Internal Server Error"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/Message1'
#     get:
#       summary: "Get a paginated list of products"
#       tags:
#         - Product
#       parameters:
#         - name: page
#           in: query
#           required: false
#           description: "Page number for pagination"
#           schema:
#             type: integer
#         - name: limit
#           in: query
#           required: false
#           description: "Number of items per page"
#           schema:
#             type: integer
#       responses:
#         200:
#           description: "List of products retrieved successfully"
#           content:
#             application/json:
#               schema:
#                 type: object
#                 properties:
#                   docs:
#                     type: array
#                     items:
#                       $ref: '#/components/schemas/Product'
#                   totalDocs:
#                     type: integer
#                   limit:
#                     type: integer
#                   page:
#                     type: integer
#                   totalPages:
#                     type: integer
#                   hasNextPage:
#                     type: boolean
#                   hasPrevPage:
#                     type: boolean
#         500:
#           description: "Internal Server Error"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/Message1'
#   /api/products/me:
#     get:
#       summary: "Get products created by the authenticated user"
#       tags:
#         - Product
#       security:
#         - cookieAuth: []
#       responses:
#         200:
#           description: "List of user's products retrieved successfully"
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/Product'
#         500:
#           description: "Internal Server Error"
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/responses/Message1'
